---
title: "Biodiversity analysis"
subtitle: "East Gippsland (extended area)" 
format:
  html:
    embed-resources: true
    toc: true
    toc-depth: 2
editor: source
execute:
  echo: false
  message: false
  warning: false
---

```{r library}
# Library
lib <- c("targets","tarchetypes",
         "tidyverse","sf","galah","terra",
         "tidyterra","tmap","leaflet","plotly",
         "iNEXT")
invisible(lapply(lib, library, character.only = TRUE))
rm(lib)

# Targets config
tar_config_set(store = here::here("_targets"))

# Create a custom theme
theme_minimal_hpha0042 <- theme_minimal() +
  theme(
    # Plot title & subtitle
    plot.title = element_text(face = 'bold'),
    plot.title.position = "plot",
    plot.subtitle = element_text(color = "grey20", size = 12)
  )
theme_set(theme_minimal_hpha0042)
```

### Data Wragnling   

```{r}
# PREPARE DATA FOR VISUALISATION
fire1920_timeframe <- data.frame(
  start_date = as.POSIXct(c("2019-11-22", "2019-11-22")), 
  end_date = as.POSIXct(c("2020-03-01", "2020-03-01")))

# Define color palette
report_pal <- setNames(c(RColorBrewer::brewer.pal(n=8,name="Set2")[c(1,2)],
                       "#F57C00", "#0D47A1","#FFCC80","#E3F2FD"),
              c("parkres","fire",
                "burnt_after", "unburnt_after", "burnt_before", "unburnt_before"))
```

```{r}
# PREPARE DATA FOR STATISTICAL ESTIMATION
tar_load(sighting) # ref to _targets.R
tar_load(evc_cropped) # ref to _targets.R

# Solution 1: sighting + (evc + grid_template) 
#           = sighting + evc_gridcell = sighting_evc_gridcell ------------------
  
# 1. Create a SpatRaster grid template from scratch (extend of the evc_cropped)
grid_template <- terra::rast(
    x = evc_cropped,
    crs = "epsg:7844", # GDA2020
    resolution = 1 / 3000
  )
  
# 2. Assign unique IDs to the grid cells (cell numbers)
# The cell numbers will be used as grid cell IDs
grid_template <- terra::setValues(grid_template, 1:ncell(grid_template))

# 3. Convert sf EVC polygons to terra::SpatVector
evc_cropped_v <- terra::vect(evc_cropped[c("XGROUPNAME", "geometry")])
  
# 4. Extract evc_group for each gridcell_id  
#    by rasterizing EVC polygons XGROUPNAME to each grid cell
evc_gridcell <- terra::rasterize(
  evc_cropped_v, # SpatVector object
  grid_template, # SpatRaster grid cell template
  field = "XGROUPNAME", # EVC class
)
# Sys.time()

# Convert into df | gridcell_id | evc_group | 
evc_gridcell_df <- terra::as.data.frame(evc_gridcell, cells = TRUE) |> 
  dplyr::rename(
    gridcell_id = cell, 
    evc_group = XGROUPNAME) |> 
  dplyr::mutate(
    gridcell_id = as.character(gridcell_id),
    evc_group = as.character(evc_group))

# Checking the df
# nrow(evc_gridcell_df) == length(unique(evc_gridcell_df$gridcell_id)) # nrow = 35,275,162 unique cells (from 67553244 down to here, filtered out gridcell_id with NA evc_group)

sort(unique(evc_gridcell_df$evc_group))

# 5. Convert sf points (sighting) to coordinates
# Convert sf POINT to terra SpatVector                                          
sighting_v <- terra::vect(sighting[c("sighting_id","sighting_geometry")])

# 6. Extract gridcell_id for each sighting_id based on its coordinates
sighting_gridcell <- terra::extract(
  grid_template, 
  sighting_v) |> 
  dplyr::rename(
    "sighting_rowname" = "ID", 
    "gridcell_id" = "lyr.1") |> 
  dplyr::mutate(
    sighting_rowname = as.character(sighting_rowname),
    gridcell_id = as.character(gridcell_id))

# Get evc_group associated with gridcell_id for each sighting_id
sighting_evc_gridcell <- dplyr::left_join(
  sighting_gridcell,
  evc_gridcell_df,
  by = "gridcell_id"
)

# 7. Combine the extracted cell IDs with the original sighting data
sighting <- base::cbind(
  sighting, 
  sighting_evc_gridcell[c("gridcell_id","evc_group")]
  ) |> 
  # Exclude records without evc_group
  dplyr::filter(!is.na(evc_group))
# ------------------------------------------------------------------------------

# AMENDED Select species group & vegetation group ------------------------------
# [*] Of the 14 taxon groupings and 20 habitats, only those with ≥90 observations in burnt regions in the 18 months after fires were included for further analysis. -> 7 species groups and 12 EVC groups

# Original  
# ala_sighting |> sf::st_drop_geometry() |> select(species_group) |> unique() # 14
# sighting |> sf::st_drop_geometry() |> select(evc_group) |> unique() # 20

# Selected
# selected_species_group <- sighting |> 
#   sf::st_drop_geometry() |>
#   dplyr::filter(
#     burnt == "burnt",
#     before_after_fire == "after", time_since_fire_days <= 548) |>
#   group_by(species_group, evc_group) |>
#   summarise(n = n()) |> 
#   filter(n >= 90) |> 
#   ungroup() |> 
#   select(species_group) |> 
#   unique() |> 
#   pull()

# selected_evc_group <- sighting |> 
#   sf::st_drop_geometry() |>
#   dplyr::filter(
#     burnt == "burnt",
#     before_after_fire == "after", time_since_fire_days <= 548) |>
#   group_by(species_group, evc_group) |>
#   summarise(n = n()) |> 
#   filter(n >= 90) |> 
#   ungroup() |> 
#   select(evc_group) |> 
#   unique() |> 
#   pull()

# bring forward to _targets.R 
# cat("\"",paste(sort(selected_evc_group), collapse = "\", \""),"\"",sep = "")
selected_species_group <- c("Amphibians", "Birds", "Insects", "Mammals", "Molluscs", "Plants", "Reptiles")

selected_evc_group <- c("Coastal Scrubs Grasslands and Woodlands", "Dry Forests", "Heathlands", "Lowland Forests", "Montane Grasslands, Shrublands or Woodlands", "Rainforests", "Riparian Scrubs or Swampy Scrubs and Woodlands", "Riverine Grassy Woodlands or Forests", "Rocky Outcrop or Escarpment Scrubs", "Sub-alpine Grasslands, Shrublands or Woodlands", "Wet or Damp Forests", "Wetlands")
#-------------------------------------------------------------------------------

# 8. Subset sighting to only selected_evc_group
sighting <- sighting |> 
  dplyr::filter(evc_group %in% selected_evc_group)

# [!] CHECKING: a gridcell_id only has 1 evc_group value -> 0 = PASS
# sighting |> sf::st_drop_geometry() |> 
#   group_by(gridcell_id) |>
#   summarise(n = n_distinct(evc_group)) |> 
#   filter(n > 1) |> 
#   nrow()
```


```{r}
head(sighting, 10)
```

### Data Summary     
```{r}
sighting |> 
  sf::st_drop_geometry() |> 
  group_by(sample) |> 
  summarise(
    "s.size" = n(), # number of individuals
    "observed" = length(unique(species)) # number of species
    ) 
```

### Standardising sampling periods  

Problem: Increased sighting effort after the fires. 

```{r}
# Line plot
ggplot(
  data = sighting |> 
  sf::st_drop_geometry() |> 
  dplyr::mutate(sighting_ym = format(sighting_date, "%Y-%m")) |>
  group_by(sighting_ym) |>
  summarise(sighting_count = n())
) +
  geom_line(
    aes(x = sighting_ym, y = sighting_count, group = 1),
    color = "grey30",
    linewidth = 1
  ) +
  # Line
  geom_point(aes(x = sighting_ym, y = sighting_count),
             size = 1.5) +
  theme(aspect.ratio = 1/5) + # Plot aspect ratio y/x
  # Highlight the fire period
  geom_rect(
    data = fire1920_timeframe |> dplyr::mutate(start_date = format(start_date, "%Y-%m"), end_date = format(end_date, "%Y-%m")),
    aes(xmin = start_date, xmax = end_date, ymin = -Inf, ymax = Inf),
    fill = report_pal[["fire"]],
    alpha = 0.2
  ) +
  # Annoation
  annotate(
    "text", x = format(fire1920_timeframe$start_date[1] %m-% months(2), "%Y-%m"), y = 22000,
    label = "Wildfires 2019/20",
    fontface = "bold",
    color = report_pal[["fire"]]) +
  labs(title = "Monthly number of sightings in the East Gippsland Shire",
       subtitle = "2017 - 2021",
       x = NULL, y = NULL)
```
Solution: Create temporal sampling periods with the same duration. 
For each grid cell, extract the ALA observations for the before-after fire and burnt-unburnt treatments.  

In burnt areas:  
  
Before-After treatment   
- After: One after-fire sampling period: Fire start date time-since-fire. Maximum time-since-fire is 548 days (18 months).   
- Before: Control the time-since-fire   

<!-- [S1] -->
Step 1: Fixed post-fire period  
We established a fixed post-fire period of 548 days (18 months) for all areas impacted by the fire. This period began on the fire start date of each grid cell and extended for 18 months afterward. Reasoning behind the selection of 548 days (ref to Appendix 2). 

<!-- [S2] -->
Step 2: For pre-fire samples, extract ALA sighting observations only from grid cells with post-fire observations (cells with sightings after the fire start date). Create simulated fire_start_date instead of using the actual raw data. Hence, the time-since-fire days for these grid cells are artifical and do not exceed 548 days.  
<!-- [S2.1] -->
<!-- [S2.2] Create simulated fire_start_date instead of using the actual raw data -->

<!-- [S3] -->
Step 3: Determining the pre-fire period  
To create comparable pre-fire periods, we first defined the pre-fire period starting date by subtracting a common number of days (1029 days) from the fire start date for each grid cell.   

<!-- [S4] -->
Step 4: Creating multiple pre-fire periods  
Then, we generated nine pre-fire periods: the next pre-fire period starting were determined by offsetting the preceding one by 46 days (1.5 months). Each pre-fire period extended for 548 days (18 months) to match length of the post-fire period. The latest pre-fire period began on 22 May 2018, ensuring no overlap with the post-fire periods.  
<!-- [*] constraint -->

Purpose of Controlling the time-since-fire: This careful construction of pre-fire sampling periods ensures that the pre-fire data collection occurred over timeframes mirroring those of the post-fire period. Hence, this minimises the potential influence natural fluctuation in biodiversity on the results. This control was crucial as biodiversity naturally varies over time due to factors, such as (1) cyclical patterns of abundance of many species, and (2) the long-term trends of environmental changes or species interactions.   

<!-- [S5] -->
Step 5: Select unburnt grid cells  <!-- to-rewrite -->

<!-- [**] constraint -->
- The same number of grid cells in the burnt region assigned to each vegetation class (from which habitat was derived; see Section 2.3) was then randomly selected from areas which were not burnt by the 2019–2020 fires.  
- When burnt or unburnt regions had unequal grid cell numbers per vegetation class, grid cells were randomly removed from the treatment with the higher value, to ensure equal spatial and vegetation class coverage between treatments. <!-- Fire severity, fire date, and habitat values were then extracted for each research- grade iNaturalist observation with ≤1000 m accuracy (such that observations would only be a maximum of one grid cell offset), resulting in a dataset of species observations at 1000 m resolution, with associated fire severity, fire date, and habitat. -->

- [S5.1] Determine limiting factor for each evc_group: For each vegetation group, identify whether the burnt or unburnt cells are fewer in number. This will be the limiting factor for that group.  

- [S5.2] Set sample size then random sampling within strata: For each vegetation group, set the sample size equal to the number of cells in the limiting category (burnt or unburnt). This ensures equal representation. Then, randomly sample grid cells within each stratum: 
+ For the limiting category, select all available cells.
+ For the non-limiting category, randomly select the same number of cells as in the limiting category.  
This procedure is applied for all vegetation groups.   

- [S5.3] Randomly allocate the fire_start_date from burnt_after to unburnt_after grid cells with the same vegetation class.  

- [S5.4] Subsequent creation of unburnt “before” periods followed the same methodology as described above. 
+ [S5.4.1] Create multiple pre-fire periods for unburnt_before grid cells.
+ [S5.4.2] Select observations in unburnt_before_xxxx


```{r}
#| eval: false 
# generate pre-fire periods starting date
seq(from = as.Date("2017-07-04"), by = "46 days", length.out = 9)

format(as.Date(fire1920_timeframe$start_date[1]) - 548, "%d %b %Y")  # "2018-05-22"
as.Date("2019-11-22") - 548
as.Date("2018-05-22") + 548
as.Date("2019-11-22") - as.Date("2018-02-19")
```

```{r}
# Set seed for reproducibility (stratified sampling procedure)
set.seed(5543)

# burnt_after_gridcell: grid cells with post-fire observations 
burnt_after_gridcell <- sighting |>
  sf::st_drop_geometry() |>
  # [S1] Fixed post-fire period  
  dplyr::filter(before_after_fire == "after" & time_since_fire_days <= 548) |> 
  select(gridcell_id, evc_group, fire_start_date) |>
  unique() |> # 10,932 unique gridcell_id
  # [S4] Creating multiple pre-fire periods 
  dplyr::slice(rep(1:n(), each = 9)) |>             # Replicate each row 9 times (9 pre-fire periods)
  dplyr::group_by(gridcell_id, fire_start_date) |>  # Group by original columns
  dplyr::mutate(pfp_id = row_number()) |>           # Create ID column for each replication (pre-fire period ID)
  ungroup() |> 
  dplyr::mutate(
    pfp_start_date = fire_start_date - 1029 + (pfp_id - 1) * 46, # [S3] Determining the pre-fire period  
    pfp_end_date   = pfp_start_date + 548) |> 
  # [*] S4 constraint: The latest pre-fire period began on 22 May 2018, ensuring no overlap with the post-fire periods.
  dplyr::filter(pfp_start_date <= as.Date(fire1920_timeframe$start_date[1]) - 548) # "2018-05-22" 

# Number of grid cell per vegetation class?  
sample_size_by_evc <- 
  dplyr::left_join(
    burnt_after_gridcell |>
      dplyr::filter(pfp_id == 1) |>
      dplyr::select(c(gridcell_id, evc_group)) |>
      group_by(evc_group) |>
      summarise(burnt_after_gridcell_count = n_distinct(gridcell_id))
    ,
    sighting |> sf::st_drop_geometry() |> 
      dplyr::filter(burnt == "unburnt" & before_after_fire == "after") |> # PART 3/4: sample_id = "unburnt_after"
      group_by(evc_group) |>
      summarise(unburnt_after_gridcell_count = n_distinct(gridcell_id))
    ,
    by = c("evc_group")
) |> 
  # [S5.1] Determine limiting factor for each evc_group
  dplyr::mutate(
    sample_size = pmin(burnt_after_gridcell_count,  unburnt_after_gridcell_count),
    which_treatment = case_when(
      burnt_after_gridcell_count <= unburnt_after_gridcell_count ~ "burnt_after",
      burnt_after_gridcell_count > unburnt_after_gridcell_count ~ "unburnt_after")) 

sample_size_by_evc

# [S5.2.1] Perform stratified sampling for burnt_after
burnt_after_gridcell_stratified_sampled <- 
  # Data source
  burnt_after_gridcell |> dplyr::filter(pfp_id==1) |> dplyr::select(evc_group, gridcell_id, fire_start_date) |> 
  # Left join with sample_size_by_evc
  dplyr::left_join(sample_size_by_evc |> select(c(evc_group, sample_size)),
            by = "evc_group") |> 
  dplyr::group_by(evc_group) %>% 
  dplyr::group_modify(~ slice_sample(.x, n = .x$sample_size[1])) |> # Use `slice_sample` with `n` determined by `sample_size` in each evc_group
  dplyr::ungroup() |> 
  dplyr::select(evc_group, gridcell_id, fire_start_date) 

# [S5.2.2] Perform stratified sampling for unburnt_after
unburnt_after_gridcell_stratified_sampled <- 
  # Data source = # PART 3/4: sample_id = "unburnt_after" 
  sighting |> sf::st_drop_geometry() |> 
    dplyr::filter(burnt == "unburnt" & before_after_fire == "after") |> 
    dplyr::select(evc_group, gridcell_id) |> 
    unique() |> 
  # Left join with sample_size_by_evc
  dplyr::left_join(sample_size_by_evc |> select(c(evc_group, sample_size)),
            by = "evc_group") |> 
  dplyr::group_by(evc_group) %>% 
  dplyr::group_modify(~ slice_sample(.x, n = .x$sample_size[1])) |> # Use `slice_sample` with `n` determined by `sample_size` in each evc_group
  dplyr::ungroup() |> 
  dplyr::select(evc_group, gridcell_id) |> 
  # [S5.3] Randomly allocate the fire_start_date from burnt_after to unburnt_after grid cells with the same vegetation class
  cbind(
    burnt_after_gridcell_stratified_sampled |> 
      dplyr::group_by(evc_group) |> # Group by evc_group
      slice_sample(prop = 1) |> # Shuffle within each evc_group by sampling all rows
      ungroup() |> 
      dplyr::rename(fire_start_date_shuffled = fire_start_date) |> 
      select(fire_start_date_shuffled)
    # [!] Checking proportion of each evc_group in the shuffled sample
    # cbind(burnt_after_gridcell_stratified_sampled) |> 
    # group_by(evc_group, fire_start_date_shuffled) |>
    # summarise(n=n()) |> 
    # mutate(prop = n/sum(n))
  ) |> 
  dplyr::rename(fire_start_date = fire_start_date_shuffled)

# #[!] Checking: [**] constraint of Number of grid cells in the burnt region = in the unburnt region -> 0 = PASS
# cbind(
#   burnt_after_gridcell_stratified_sampled |>
#     group_by(evc_group) |>
#     summarise(burnt_after_sample_size = n_distinct(gridcell_id)),
#   unburnt_after_gridcell_stratified_sampled |>
#     group_by(evc_group) |>
#     summarise(unburnt_after_sample_size = n_distinct(gridcell_id)) |>
#     dplyr::select(unburnt_after_sample_size)
# ) |>
#   mutate(checking = burnt_after_sample_size - unburnt_after_sample_size)
# #---

# [S5.4]
# [S5.4.1] Create multiple pre-fire periods for unburnt_before grid cells  
unburnt_after_gridcell <- unburnt_after_gridcell_stratified_sampled |> 
  select(gridcell_id, evc_group, fire_start_date) |>
  # [S4] Creating multiple pre-fire periods 
  dplyr::slice(rep(1:n(), each = 9)) |>             # Replicate each row 9 times (9 pre-fire periods)
  dplyr::group_by(gridcell_id, fire_start_date) |>  # Group by original columns
  dplyr::mutate(pfp_id = row_number()) |>           # Create ID column for each replication (pre-fire period ID)
  ungroup() |> 
  dplyr::mutate(
    pfp_start_date = fire_start_date - 1029 + (pfp_id - 1) * 46, # [S3] Determining the pre-fire period  
    pfp_end_date   = pfp_start_date + 548) |> 
  # [*] S4 constraint: The latest pre-fire period began on 22 May 2018, ensuring no overlap with the post-fire periods.
  dplyr::filter(pfp_start_date <= as.Date(fire1920_timeframe$start_date[1]) - 548) # "2018-05-22" 

# #[!] Checking: unburnt_after_gridcell_stratified_sampled$gridcell_id is unique -> 0 = PASS
# length(unique(unburnt_after_gridcell_stratified_sampled$gridcell_id)) - nrow(unburnt_after_gridcell_stratified_sampled)
# #---

# APPENDING TOWARD THE FINAL DATASET -------------------------------------------
sighting_final <- 
rbind(
  # PART 1/4: sample_id = "burnt_after"
  sighting |> 
    sf::st_drop_geometry() |> 
    dplyr::filter(before_after_fire == "after" & time_since_fire_days <= 548,
                  gridcell_id %in% unique(burnt_after_gridcell_stratified_sampled$gridcell_id)) |> 
    dplyr::mutate(sample_id = "burnt_after") |> 
    # Column structure
    select(c("sighting_id", "species_group", "species", "sighting_date", "evc_group",
             "fire_no", "fire_start_date", "time_since_fire_days",
             "before_after_fire", "burnt", "sample", "gridcell_id", "sample_id")) 
  ,
  # PART 2/4: sample_id = "burnt_before_xxxx"
  dplyr::left_join(
    # [S2] 
    # [S2.1] Extract ALA sighting observations only from grid cells with post-fire observations
    ## x (left data)
    sighting |> sf::st_drop_geometry() |>  
      dplyr::filter(burnt == "burnt" & before_after_fire == "before"),
    ## y (right data)
    burnt_after_gridcell |> 
      dplyr::filter(gridcell_id %in% unique(burnt_after_gridcell_stratified_sampled$gridcell_id)) |> 
      dplyr::select(-c(fire_start_date, evc_group))
    ,
    join_by(gridcell_id, between(x$sighting_date, y$pfp_start_date, y$pfp_end_date, bounds = "[]"))
    ) |> 
    dplyr::filter(!is.na(pfp_id)) |> 
    # [S2.2] Create simulated fire_start_date instead of using the actual raw data ---
      dplyr::select(-c(fire_start_date)) |>              # Remove actual raw fire_start_date
      dplyr::rename(fire_start_date = pfp_start_date) |> # Simulated fire_start_date
      dplyr::mutate(                                     # Recalculate time_since_fire_days
        time_since_fire_days = as.numeric(lubridate::ymd(sighting_date) - lubridate::ymd(fire_start_date))) |> 
    # ---
  # sample_id
  dplyr::mutate(sample_id = case_match(
    pfp_id,
    1  ~ 'burnt_before_1029',
    2  ~ 'burnt_before_983',
    3  ~ 'burnt_before_937',
    4  ~ 'burnt_before_891',
    5  ~ 'burnt_before_845',
    6  ~ 'burnt_before_799',
    7  ~ 'burnt_before_753',
    8  ~ 'burnt_before_707',
    9  ~ 'burnt_before_661'
    )
  ) |> 
    # Column structure
    select(c("sighting_id", "species_group", "species", "sighting_date", "evc_group",
             "fire_no", "fire_start_date", "time_since_fire_days",
             "before_after_fire", "burnt", "sample", "gridcell_id", "sample_id"))
  ,
  # PART 3/4: sample_id = "unburnt_after"  
  sighting |> sf::st_drop_geometry() |> 
    dplyr::filter(burnt == "unburnt" & before_after_fire == "after") |>
    dplyr::select(-c(fire_start_date)) |> 
    # Subset only sampled gridcell_id
    dplyr::inner_join(unburnt_after_gridcell_stratified_sampled, by = c("gridcell_id", "evc_group")) |>
    dplyr::mutate(
      sample_id = "unburnt_after",
      time_since_fire_days = as.numeric(lubridate::ymd(sighting_date) - lubridate::ymd(fire_start_date))
      ) |> 
    dplyr::filter(time_since_fire_days <= 548) |> # [*] constraint in [S1]
    # Column structure
    select(c("sighting_id", "species_group", "species", "sighting_date", "evc_group",
             "fire_no", "fire_start_date", "time_since_fire_days",
             "before_after_fire", "burnt", "sample", "gridcell_id", "sample_id")) 
  ,
  # PART 4/4: sample_id = "unburnt_before_xxxx"
  # [S5.4.2]
	dplyr::left_join(
	  # [S2]
	  # [S2.1] Extract ALA sighting observations only from grid cells with post-fire observations
	  ## x (left data)
	  sighting |> sf::st_drop_geometry() |>  
		dplyr::filter(burnt == "unburnt" & before_after_fire == "before"),
	  ## y (right data)
	  unburnt_after_gridcell |> 
		dplyr::select(-c(fire_start_date, evc_group))
	  ,
	  join_by(gridcell_id, between(x$sighting_date, y$pfp_start_date, y$pfp_end_date, bounds = "[]"))
	  ) |> 
	  dplyr::filter(!is.na(pfp_id)) |> 
	  # [S2.2] Create simulated fire_start_date instead of using the actual raw data ---
		  dplyr::select(-c(fire_start_date)) |>              # Remove actual raw fire_start_date
		  dplyr::rename(fire_start_date = pfp_start_date) |> # Simulated fire_start_date
		  dplyr::mutate(                                     # Recalculate time_since_fire_days
			time_since_fire_days = as.numeric(lubridate::ymd(sighting_date) - lubridate::ymd(fire_start_date))) |> 
		# ---
	  # sample_id
	  dplyr::mutate(sample_id = case_match(
		  pfp_id,
		  1  ~ 'unburnt_before_1029',
		  2  ~ 'unburnt_before_983',
		  3  ~ 'unburnt_before_937',
		  4  ~ 'unburnt_before_891',
		  5  ~ 'unburnt_before_845',
		  6  ~ 'unburnt_before_799',
		  7  ~ 'unburnt_before_753',
		  8  ~ 'unburnt_before_707',
		  9  ~ 'unburnt_before_661'
	    )
	  ) |> 
		# Column structure
		select(c("sighting_id", "species_group", "species", "sighting_date", "evc_group",
				 "fire_no", "fire_start_date", "time_since_fire_days",
				 "before_after_fire", "burnt", "sample", "gridcell_id", "sample_id")) 
)

# Checking: n_distinct_gc PER evc_group
# burnt_after_gridcell |> group_by(evc_group) |> summarise(n_distinct_gc = n_distinct(gridcell_id)) 
# sighting_final |> group_by(evc_group, burnt) |> summarise(n_distinct_gc = n_distinct(gridcell_id)) 

# [!] Checking: time_since_fire_days is within 548 d -> 0 = PASS
# max(sighting_final$time_since_fire_days) - 548
# ------------------------------------------------------------------------------

# How many grid cell per sample_id? 
# sighting_final |>
#   sf::st_drop_geometry() |>
#   group_by(sample_id) |>
#   summarise(gridcell_count = n_distinct(gridcell_id))
```


Number of burnt and unburnt grid cells per vegetation class  

```{r}
sighting_final |> 
  group_by(evc_group, burnt) |> 
  summarise(gridcell_count = n_distinct(gridcell_id)) |> 
  pivot_wider(names_from = burnt, values_from = gridcell_count) |> 
  dplyr::mutate(gridcell_diff = burnt - unburnt)
```
### Statistical Estimation   

```{r}
# TRANSFORM INTO iNEXT SUPPORTED INPUT FORMAT
sp1 <- sighting_final |> 
  group_by(sample_id, species) |> 
  summarise(n = n()) |> 
  tidyr::pivot_wider(names_from = sample_id, values_from = n, values_fill = NULL)
sp1 |> head(10)

# Convert df into list of numeric vectors 
sp1_list <- lapply(as.list(sp1[,-1]), na.omit) 

# sp1_list[c("burnt_after","burnt_before","unburnt_after","unburnt_before")]

# Preview list of vectors 
lapply(sp1_list, function(x) head(x, 10))

# ESTIMATE BIODIVERSITY
sp1_output <- iNEXT::estimateD(sp1_list, datatype="abundance", base="size", level=NULL, conf=0.95)

# Results
sp1_output

# FOREST PLOT 
sp1_output |> 
  dplyr::mutate(Assemblage_Group = sub("_[0-9]+$", "", Assemblage)) |> 
  ggplot(aes(x = Assemblage, y = qD, color = Assemblage_Group)) + 
  geom_point(size = 2) + 
  ggplot2::geom_errorbar(aes(ymin = qD.LCL, ymax = qD.UCL)
                         , linewidth = 1 #, width = 1
  ) +
  scale_color_manual(values = report_pal[c("burnt_after","unburnt_after","burnt_before","unburnt_before")]) +
  facet_wrap(~Order.q) + 
  theme_bw() + 
  theme(legend.position = "bottom", aspect.ratio = 1/1)
```

# Appendix  
## Appendix 2  

<!--TODO-->
Reasoning behind choosing 548 days (18 months) as the post-fire period
(1) Ecological significance. 
(2) Data availability.
(3) Comparison to prior studies. 
(4) Practical considerations.