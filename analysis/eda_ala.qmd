---
title: "EDA ALA sighting"
subtitle: "East Gippsland (extended area)" 
format:
  html:
    embed-resources: true
    toc: true
    toc-depth: 2
editor: source
execute:
  echo: false
  message: false
  warning: false
---

```{r library}
# Library
lib <- c("targets","tarchetypes",
         "tidyverse","sf","galah","terra",
         "tidyterra","tmap","leaflet","plotly")
invisible(lapply(lib, library, character.only = TRUE))
rm(lib)

# Targets config
tar_config_set(store = here::here("_targets"))

# Create a custom theme
theme_minimal_hpha0042 <- theme_minimal() +
  theme(
    # Plot title & subtitle
    plot.title = element_text(face = 'bold'),
    plot.title.position = "plot",
    plot.subtitle = element_text(color = "grey20", size = 12)
  )
theme_set(theme_minimal_hpha0042)
```

```{r}
#| label: load-data 
tar_load(vic_map)
tar_load(evc_cropped)
tar_load(poly_fire_1920)
tar_load(poly_filter_ala)
tar_load(ala_sighting)
tar_load(bbox_filter_ala)

tar_load(fire_history_eas)
```

### Data Wrangling

```{r}
ala_sighting |> sf::st_drop_geometry() |> select(speciesGroup) |> distinct() |> arrange()
```

```{r}
#| label: data-wrangling

# Data Wrangling 


# fire1920_start_date %m+% months(18) [1] "2021-05-21"
```

#### EVC Vegetation classes

There are 20 EVC vegetation classes `XGROUPNAME` in the study area.

```{r}
sort(unique(evc_cropped$XGROUPNAME))
```

### Data aggregation

#### Select species_groups

```{r}
tar_load(fire1920_start_date)
# Crop fire extend 
poly <- sf::st_crop(st_make_valid(poly_fire_1920), st_make_valid(poly_filter_ala))

# Select species group ---------------------------------------------------------
# only those with ≥100 observations 
# [1] in burnt regions 
# [2] in the 18 months after fires were included for further analysis

ala_sighting_burnt <- 
  # [1] sighting in burnt regions
  sf::st_filter( 
    ala_sighting |> select("species_group",sighting_date = "eventDate","geometry"), 
    poly) 

selected_species_group <- ala_sighting_burnt |> 
  sf::st_drop_geometry() |> 
  # [2] in the 18 months after fires 
  filter(
    between(sighting_date, fire1920_start_date, fire1920_start_date %m+% months(18))
  ) |>
  group_by(species_group) |>
  summarise(n = n()) |>
  filter(n >= 100) |>
  pull(species_group)

selected_species_group


# AMENDED Select species group & vegetation group ------------------------------

# [*] Of the 14 taxon groupings and 19 habitats, only those with ≥90 observations in burnt regions in the 18 months after fires were included for further analysis. -> 7 species groups and 12 EVC groups
# sighting |> sf::st_drop_geometry() |> select(evc_group) |> unique() # 19

selected_species_group <- sighting |> 
  sf::st_drop_geometry() |>
  dplyr::filter(
    burnt == "burnt",
    before_after_fire == "after", time_since_fire_days <= 548) |>
  group_by(species_group, evc_group) |>
  summarise(n = n()) |> 
  filter(n >= 90) |> 
  ungroup() |> 
  select(species_group) |> 
  unique() |> 
  pull()

selected_evc_group <- sighting |> 
  sf::st_drop_geometry() |>
  dplyr::filter(
    burnt == "burnt",
    before_after_fire == "after", time_since_fire_days <= 548) |>
  group_by(species_group, evc_group) |>
  summarise(n = n()) |> 
  filter(n >= 90) |> 
  ungroup() |> 
  select(evc_group) |> 
  unique() |> 
  pull()

# bring forward to _targets.R
selected_species_group <- c("Amphibians", "Birds", "Insects", "Mammals", "Molluscs", "Plants", "Reptiles")

selected_evc_group <- c("Coastal Scrubs Grasslands and Woodlands", "Dry Forests", "Heathlands", "Lowland Forests", "Montane Grasslands, Shrublands or Woodlands", "Rainforests", "Riparian Scrubs or Swampy Scrubs and Woodlands", "Riverine Grassy Woodlands or Forests", "Rocky Outcrop or Escarpment Scrubs", "Sub-alpine Grasslands, Shrublands or Woodlands", "Wet or Damp Forests", "Wetlands")

#-------------------------------------------------------------------------------
```

Original data: 14 broad taxon groups `species_group`.  
Selected species groups: only those with ≥100 observations [1] in burnt regions [2] in the 18 months after fires were included for further analysis

```{r}
ggplot() +
  geom_sf(data = vic_map,
          fill = "grey99", color = "grey70") +
  geom_sf(data = poly_fire_1920, fill = alpha("darkred",0.4)) + 
  geom_sf(data = poly_filter_ala, fill = "transparent", col = "orange", linewidth = 1)
```

```{r}
ggplot() +
  geom_sf(data = vic_map,
          fill = "grey99", color = "grey70") +
  geom_sf(
    data = ala_sighting |>
      filter(sighting_date >= "2019-11-21" & sighting_date <= ymd("2019-11-21") %m+% months(18)),
    aes(color = species_group),
    alpha = 0.5 , size = 1
  ) +
  # scale_color_manual(
    # values = pal,
    # name = "Species Group",
    # Legend
    # guide = guide_legend(nrow = 1, override.aes = list(size = 4, alpha = 1))
    # ) +
  # Zoom
  coord_sf(xlim = st_bbox(poly_filter_ala)[c("xmin", "xmax")], 
           ylim = st_bbox(poly_filter_ala)[c("ymin", "ymax")]) +
  labs(subtitle = "Jan 2017 - Jul 2023")
```

```{r}
#| fig-caption: "Which sighting records are in the burnt regions?"
ggplot() +
  geom_sf(
    data = vic_map, fill = "grey99", color = "grey70") +
  geom_sf(
    data = ala_sighting_burnt,
    alpha = 0.5 , size = 1
    ) +
  geom_sf(data = poly_fire_1920, fill = alpha("darkred",0.4)) +
  # Zoom
  coord_sf(xlim = st_bbox(poly_filter_ala)[c("xmin", "xmax")], 
           ylim = st_bbox(poly_filter_ala)[c("ymin", "ymax")]) +
  labs(subtitle = "Jan 2017 - Jul 2023")
```

```{r ARCHIVED}
#| eval: false
# Create grid cell using sf ---------------------------------------------------

## Grid sf object
grid <- st_make_grid(
    bbox_filter_ala, 
    cellsize = c(0.025, 0.025), # degree
    cellsize = units::as_units(25, "m"), # 25 x 25 m
    crs = st_crs(vic_map),
    what = "polygons",
    square = TRUE
    )
grid <- st_sf(grid_id = 1:length(lengths(grid)), grid) # Add grid ID

plot(st_bbox(grid |> filter(grid_id == 1)))

# No of grid: (0.25 x 0.25 degree) 12432
g1 <- sf::st_make_grid(
  bbox_filter_ala,
  cellsize = units::as_units(100, "km")) # length unit
# ------------------------------------------------------------------------------
```

#### gridcell

```{r}
# Create a SpatRaster grid template from scratch 
grid_template <- terra::rast(
  x = evc_cropped,
  crs = "epsg:7844", # GDA2020
  resolution = 1 / 3000
)
# Assign gridcell_id 
# terra::values(grid_template) <- 1:ncell(grid_template) # 68,950,350 rows

# names(grid_template) # [1] "lyr.1"
# Rename 
# grid_template <- grid_template |> 
#   tidyterra::rename(gridcell_id = lyr.1)

# head(as.data.frame(grid_template),100)

# Checking
# terra::cellSize(grid_template, unit = "m")

# Number of cells 
# length(terra::cells(grid_template)) 
# Values of cells 
# terra::values(grid_template)


# Checking Plot
# ggplot() +
#   geom_sf(
#     data = vic_map, fill = "grey99", color = "grey70") +
#   tidyterra::geom_spatraster(
#     data = grid_template,
#     aes(fill = lyr.1)
#     ) +
#   scale_fill_viridis_c(na.value = "transparent") +
#   # Zoom
#   coord_sf(xlim = st_bbox(poly_filter_ala)[c("xmin", "xmax")],
#            ylim = st_bbox(poly_filter_ala)[c("ymin", "ymax")]) +
#   labs(subtitle = "Check gridcell_id")

# Number of SIGHTINGS in each grid
# countgrid <- terra::rasterize(
#   vect(ala_sighting), 
#   grid_template, 
#   fun = "count", 
#   background = NA)

# Checking Plot
# ggplot() +
#   geom_sf(
#     data = vic_map, fill = "grey99", color = "grey70") +
#   tidyterra::geom_spatraster(
#     data = countgrid |> filter(!is.na(count)),
#     aes(fill = count)
#     ) +
#   scale_fill_viridis_c(na.value = "transparent") +
#   # Zoom
#   coord_sf(xlim = st_bbox(poly_filter_ala)[c("xmin", "xmax")],
#            ylim = st_bbox(poly_filter_ala)[c("ymin", "ymax")]) +
#   labs(subtitle = "Count of sightings in each 1000 m^2 grid cell")
```

```{r}
# Convert sf EVC polygons to terra::SpatVector
evc_cropped_v <- terra::vect(evc_cropped[c("XGROUPNAME", "geometry")])

# rasterize EVC polygons XGROUPNAME to each grid cells
gridcell <- terra::rasterize(
  evc_cropped_v, # SpatVector object
  grid_template, # SpatRaster grid cell template
  field = "XGROUPNAME", # EVC class
  )

# Preview gridcell SpatRaster value
gridcell |> filter(!is.na(XGROUPNAME)) |> head(100)

# Checking Plot
ggplot() +
  geom_spatraster(data = gridcell) +
  scale_fill_viridis_d(na.value = "transparent") +  # Optional color scale
  labs(subtitle = "Vegetation class 'XGROUPNAME' of each grid cell",
       fill = "EVC Name") + 
  theme_minimal() +
  theme(legend.position = "none")
```

```{r}
#| eval: false
# Count how many grid cells each EVC class covers? 
gridcell |> as.data.frame() |> # only retain cells with !is.na(XGROUPNAME)
  rownames_to_column() |> 
  select(rowname) |> unique() |> nrow()
  dplyr::group_by(XGROUPNAME) |> 
  dplyr::summarise(n = n())

gridcell_df <- terra::as.data.frame(gridcell, cells = TRUE) |> 
  dplyr::mutate(XGROUPNAME = as.character(XGROUPNAME)) 
# nrow(gridcell_df)
# 35,289,585 rows
```

#### Sighting

```{r}
selected_species_group <-  c("Amphibians", "Arthropods", "Birds", "Crustaceans", "Fishes", "Fungi", "Insects", "Mammals", "Molluscs", "Plants", "Reptiles")

tar_load(sighting) # ref to _targets.R

# CHECKING: nrow(sighting) < nrow(ala_sighting) <- excluded FIRE_START_DATE > sighting_date, only selected_species_group

# CHECKING: How many sighting records with NA evc_group? 
# nrow(sighting |> filter(is.na(evc_group))) # 120,234 rows

# --------------------------------------------------------------------------------------
# Solution 1: sighting + (evc + grid_template) = sighting + gridcell = sighting_gridcell

# Convert sf POINT to terra SpatVector
sighting_v <- terra::vect(sighting)

# Extract Vegetation class for each sighting record
sighting_gridcell <- terra::extract(
  x = gridcell,
  y = sighting_v,
  cells = TRUE
  # ID = TRUE # the first column returned has the IDs (record numbers) of y
)
sighting_gridcell_df <- terra::as.data.frame(sighting_gridcell, geom=NULL)

length(unique(sighting_gridcell_df$cell)) # 55784 unique grid cell
# ------------------------------------------------------------------------------
# Solution 2: (sighting + evc) + grid_template = sighting_gridcell 
# 1. Create SpatRaster grid template with the same extent as the sighting data
grid_template <- terra::rast(
  x = sighting,           # Use the extent of the 'sighting' sf object
  crs = "epsg:7844",      # CRS = GDA2020 
  resolution = 1 / 3000   # Set the desired resolution (~1000m^2 per grid cell)
)

# 2. Assign unique IDs to the grid cells (cell numbers)
# The cell numbers will be used as grid cell IDs
grid_template <- terra::setValues(grid_template, 1:ncell(grid_template))

# 3. Convert sf points (sighting) to coordinates
# Convert sf POINT to terra SpatVector                                               
sighting_v <- terra::vect(sighting[c("sighting_id","sighting_geometry")])

# 4. Extract grid cell IDs for each sighting based on its coordinates
# Extract the cell number for each sighting point
sighting_gridcell <- terra::extract(
  grid_template, 
  sighting_v) |> 
  dplyr::rename(
    "sighting_rowname" = "ID", 
    "gridcell_id" = "lyr.1") |> 
  dplyr::mutate(
    sighting_rowname = as.character(sighting_rowname),
    gridcell_id = as.character(gridcell_id))

# 5. Combine the extracted cell IDs with the original sighting data
sighting <- base::cbind(sighting, sighting_gridcell["gridcell_id"])

# 6. Wrangling
sighting <- sighting |> 
  dplyr::filter(evc_group != "Plains Grasslands and Chenopod Shrublands") # n_burnt_after = 0
# ------------------------------------------------------------------------------

```

```{r}
#| eval: false 
# CHECKING PLOT: Why some sighting_id do not have evc_group? 
ggplot() + 
  geom_sf(data = evc_cropped, 
          aes(fill = XGROUPNAME), col = "transparent") + 
  geom_sf(data = sighting |> select(c(sighting_id, sighting_geometry, evc_group)) |> filter(is.na(evc_group)),
          ) +
  theme(legend.position = "none")

sighting |> 
  select(c(sighting_id, sighting_geometry, evc_group,species_group)) |> 
  filter(is.na(evc_group)) |> 
  group_by(species_group) |> 
  summarise(n = n())

# sighting may occurred on mountain areas? in the water? 
```

#### Fire

```{r}

# colnames(fire_history_eas)
# > [1] "FIRE_SEASON","FIRE_NO","FIRE_START_DATE","FIRE_SVRTY","geometry" 
# nrow(fire_history_eas) 
# > [1] 537303 records
```

#### Data Summary

```{r}
sighting |> 
  sf::st_drop_geometry() |> 
  dplyr::group_by(species_group, sample) |>
  summarise(n = n()) |> 
  pivot_wider(names_from = sample, values_from = n) |> 
  arrange(desc(burnt_after))
```

```{r}
sighting |> 
  sf::st_drop_geometry() |> 
  dplyr::group_by(evc_group, sample) |>
  summarise(n = n()) |> 
  pivot_wider(names_from = sample, values_from = n) |> 
  arrange(desc(burnt_after))
```
